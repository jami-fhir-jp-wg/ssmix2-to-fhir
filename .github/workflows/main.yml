name: Ohe-testing

on:
  push:
    branches: 
      - develop1.0
    paths:
      - 'sushi-config.yaml'
      - 'input/**'
      - '.github/workflows/main.yml'
  pull_request:
    branches: [ develop1.0 ]
    
jobs:
  turn:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['3.0']
    environment: SSH_PORT_JPFHIR  # JAMI WG アップロードサイトに関するアクセス情報の環境名
    steps:
    - uses: actions/checkout@v2

    - name: ssh key generate
      run: echo "$SSH_PRIVATE_KEY" > key && chmod 600 key
      env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY_TO_JPFHIR }}
    - name: rsync remote-site-deploy
      run: rsync -auzrv -e "ssh -i key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -p 8022" --delete ./output ./fsh-generated r2217734@www41.onamae.ne.jp:/home/r2217734/public_html/jpfhir.jp/eMunicipalCheckup/ --exclude .htaccess

    - name: Setup npm
      uses: actions/setup-node@v2
      with: 
        check-latest: true
    - name: Setup Sushi
      run: |
        sudo npm install -g fsh-sushi
    - name: Install Jekyll
      run: |
        sudo apt-get install jekyll

    - name: Download IG Publisher
      uses: Legion2/download-release-action@v2.1.0
      with:
        repository: HL7/fhir-ig-publisher
        tag: '1.2.24'
        path: .
        file: publisher.jar

    - name: Download Japanese version of hl7.fhir.core package
      uses: wei/wget@v1
      with:
        args:  https://jpfhir.jp/fhir/hl7.fhir.r4.core-4.0.1.tgz

    - name: Run IG Publisher
      env:
        PACKAGE: jp-core.r4#1.1.1-snap
        PACKAGECORE: hl7.fhir.r4.core#4.0.1
      run: | 
        mkdir -p input-cache
        mv ./publisher.jar ./input-cache
        : # mv hl7.fhir.r4.core-4.0.1.tgz  $PACKAGECORE.tgz
        : # - name: Wget IG PublisherJPFHIR
        : # uses: wei/wget@v1
        : # with:
        : #  args:  https://tx.jpfhir.jp/download/publisherJPFHIR.jar
        : # this is a comment:  ls -la ./input-cache
        mkdir -p /home/runner/.fhir
        mkdir -p  /home/runner/.fhir/packages
        mkdir -p  /home/runner/.fhir/packages/$PACKAGE
        : # mkdir -p  /home/runner/.fhir/packages/$PACKAGECORE
        : # local cache にpackage をcopyして展開する
        cp ./packages_snapshot/$PACKAGE.tgz /home/runner/.fhir/packages/$PACKAGE/$PACKAGE.tgz
        : # cp ./packages_snapshot/$PACKAGECORE.tgz /home/runner/.fhir/packages/$PACKAGECORE/$PACKAGECORE.tgz
        : #  cp $PACKAGECORE.tgz /home/runner/.fhir/packages/$PACKAGECORE/$PACKAGECORE.tgz
        tar xzf /home/runner/.fhir/packages/$PACKAGE/$PACKAGE.tgz -C /home/runner/.fhir/packages/$PACKAGE/
        : #  tar xzf /home/runner/.fhir/packages/$PACKAGECORE/$PACKAGECORE.tgz -C /home/runner/.fhir/packages/$PACKAGECORE/
        unset DISPLAY
        : # 
        java -Xmx4G -Djava.awt.headless=true -jar ./input-cache/publisher.jar -ig ig.ini  -tx https://tx.jpfhir.jp:8081
        : # java -Djava.awt.headless=true -jar ./input-cache/publisher.jar -ig ig.ini

    - name: prepare gtz files for upload to remote site
      run: | 
        tar czf output.tgz output

    - name: ssh key generate
      run: echo "$SSH_PRIVATE_KEY" > key && chmod 600 key; ls -l key
      env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY_TO_JPFHIR }}
    - name: rsync remote-site-deploy
      run: |
        rsync -auzrv -e "ssh -i key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT_JPFHIR }}" --delete output.tgz  ${{ secrets.JAMIWG_USERID_AT_WEBHOST }}:${{ secrets.JAMIWG_WEBPATH }}/jpfhir.jp/fhir/ssmix2fhirIG/ --exclude .htaccess
        ssh -i key  -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no  -p ${{ secrets.SSH_PORT_JPFHIR }} ${{ secrets.JAMIWG_USERID_AT_WEBHOST }}   'cd ${{ secrets.JAMIWG_WEBPATH }}/jpfhir.jp/fhir/ssmix2fhirIG/ ; tar xzf output.tgz'


